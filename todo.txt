
v1.5.6 Maybe...?
----------------

give access to pod deps - useful for auto scanning / discovery of classes



Meh... can't be arsed
---------------------
MappedConfig  -> MapConfig  ? ConfigMap  ?
orderedConfig -> ListConfig ? ConfigList ?
 - What's the point? The orig names aren't that bad!
 - And *everyone* would need to update their code, even if they were deprecated! 
 
@Inject { optional = true }
 - why would you want to? And what of ctor args? 

Make SyncState - a consistent API for thread and const data

TypeCoercers to be added via index props

service disambiguation via facets 
 - is just another dep pro: map of services keyed by type&facet

@Local (local to the module of the serviceDef in ctx stack) - use case? Annotate method?
 - just a convenience for serviceById



Just Plain Bad Ideas:
---------------------
Allow other @Inject facets
 - so BedSheet can define its own, for fewer pod import statements
 - but if afIoc and afBedSheet are imported at same time ~ conflict!
 
OrderConfig wildcards - e.g. "before: *" NO WILDCARDS
 - use placeholders instead

Create PerThreadService 
 - is just a registry.get()!

IocHelper.eagerLoadBuiltInServices
 - I mean, why?
 
RegShutdown
 - kill the ConcurrentState actor pool 
   - can't, it's static. t'would affect ALL ConcurrentStates in other IoCs 
 - clean up ALL threads
   - can't, can only clean up up current thread

recursion err with builder methods injection scope 1->2->1
 - can't diagnose this, any reg.serviceById() creates a new InjectionCtx, so I can't detect recursion 
 - what people do in their builder methods is up to them!
