
v1.3.2 Maybe...?
---------------- 
Wot happens when you adivse a non-proxied service?

OpTracker should not err.out but append to an OpTrackerErr (extend IocErr???)

@Advise to Err when no match...possible?
 - yeah, do check on reg startup
 - add 'optional' like with @contribute

recursion err with builder methods injection scope 1->2->1

ThreadManager - add ThreadCleanup handlers

RegShutdown
 - kill the ConcurrentState actor pool 
 - clean up ALL threads

ConcurrentState
 - expose ActorPool
 - change crappy withState() behaviour
 - add getFuture() instead
 


Meh... can't be arsed
---------------------
Re-do DepdendencyCtx to give more detail 
 - See ProviderCtx for details
 - it's messy and I don't need it
 - but I could then inject Loggers...? Hmm.

service disambiguation via facets 
 - is just another dep pro: map of services keyed by type&facet

Move all tests out into a dedicated pod
 - v1.3.0 is 386 Kb!

@Local (local to the module of the serviceDef in ctx stack) - use case? Annotate method?
 - just a convenience for serviceById



Just Plain Bad Ideas:
---------------------
OrderConfig wildcards - e.g. "before: *" NO WILDCARDS, use placeholders instead

PerThreadService - is just a registry.get()!

Registry.createProxy(mixinType, implType)
 - as impl type is not a service, it's quite useless.
 - better to enhance plastic

IocHelper.eagerLoadBuiltInServices
 - I mean, why?
 
