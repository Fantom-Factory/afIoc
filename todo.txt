
v1.5.0 Done!
------------
Tidy up InjectionCtx and OpTracker - make them truly thread stackable.

Re-do DepdendencyCtx to give more detail 
 - See InjectionCtx for details
 - it's messy and I don't need it
 - but then I could inject Loggers... Hmm...?

Move Service Mixins and Impls into same file

Create Log injector - make overridable

Registry.callMethod()

Registry.createProxy() - may have to change Lazy service
Registry.createProxy(mixinType, implType)
 - as impl type is not a service, it's quite useless.
 - better to enhance plastic

ServiceIds should probably be fully qualified type names to avoid conflicts

Allow this Dup Err - afIoc::IocErr: Service mixin afBedSheet::Routes is matched by 2 services: PillowRoutes, Routes.
Default to the Service type name if given.
 
API documentation overhaul

Use 'appName' from startup options -> appName started up in XXX secs


v1.5.2 Maybe...?
----------------

use afIoc::ThreadStack in efan - copy, rather than use



Meh... can't be arsed
---------------------
Make SyncState - a consistent API for thread and const data

TypeCoercers to be added via index props

service disambiguation via facets 
 - is just another dep pro: map of services keyed by type&facet

@Local (local to the module of the serviceDef in ctx stack) - use case? Annotate method?
 - just a convenience for serviceById



Just Plain Bad Ideas:
---------------------
Allow other @Inject facets
 - so BedSheet can define its own, for fewer pod import statements
 - but if afIoc and afBedSheet are imported at same time ~ conflict!
 
OrderConfig wildcards - e.g. "before: *" NO WILDCARDS
 - use placeholders instead

Create PerThreadService 
 - is just a registry.get()!

IocHelper.eagerLoadBuiltInServices
 - I mean, why?
 
RegShutdown
 - kill the ConcurrentState actor pool 
   - can't, it's static. t'would affect ALL ConcurrentStates in other IoCs 
 - clean up ALL threads
   - can't, can only clean up up current thread

recursion err with builder methods injection scope 1->2->1
 - can't diagnose this, any reg.serviceById() creates a new InjectionCtx, so I can't detect recursion 
 - what people do in their builder methods is up to them!
